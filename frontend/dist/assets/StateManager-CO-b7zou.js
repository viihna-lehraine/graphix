class n{static#s=null;#t;#e;#i;#n;#a;constructor(t,e){this.#t={...t},this.#t.textElements=t.textElements||[],this.#t.selectedTextIndex=t.selectedTextIndex??null,this.#e=new Set,this.#i=[],this.#n=[],this.#a=e}static getInstance(t,e){try{return n.#s||(n.#s=new n(t,e)),n.#s}catch(s){throw new Error(`Failed to get CanvasStateService instance: ${s instanceof Error?s.message:String(s)}`)}}addTextElement(t){this.#t.textElements.push(t),this.#r()}canRedo(){return this.#n.length>0}canUndo(){return this.#i.length>0}get(){return{...this.#t}}moveTextElement(t,e,s){const i=this.#t.textElements[t];i&&(i.x=e,i.y=s,this.#r())}redo(){this.#n.length>0&&(this.#i.push({...this.#t}),this.#t=this.#n.pop(),this.#r())}removeTextElement(t){this.#t.textElements.splice(t,1),this.#r()}reset(){this.set(this.#a.config.default.canvasWidth,this.#a.config.default.canvasHeight)}set(t,e){this.#i.push({...this.#t}),this.#n=[],this.#t.width=t,this.#t.height=e,this.#r()}subscribe(t){return this.#e.add(t),t(this.get()),()=>this.#e.delete(t)}undo(){this.#i.length>0&&(this.#n.push({...this.#t}),this.#t=this.#i.pop(),this.#r())}#r(){const t=this.get();for(const e of this.#e)e(t)}}class r{static#s=null;#t;#e;constructor(t){this.#t={...t},this.#e=new Set}static getInstance(t){try{return r.#s||(r.#s=new r(t)),r.#s}catch(e){throw new Error(`Failed to get ClientStateService instance: ${e instanceof Error?e.message:String(e)}`)}}get(){return{...this.#t}}set(t,e){this.#t.viewportWidth=t,this.#t.viewportHeight=e,this.#i()}subscribe(t){return this.#e.add(t),t(this.get()),()=>this.#e.delete(t)}#i(){const t=this.get();for(const e of this.#e)e(t)}}class a{static#s=null;#t;#e;#i;#n;#a;constructor(t,e,s){try{s.info("Initializing StateManager...","[StateManager constructor]"),this.#a=t,this.#i=e,this.#n=s;let i={canvas:{width:this.#a.config.default.canvasWidth,height:this.#a.config.default.canvasHeight,selectedTextIndex:null,textElements:[]},client:{viewportWidth:window.innerWidth,viewportHeight:window.innerHeight}};const h=window.localStorage.getItem("appState");if(h)try{Object.assign(i,JSON.parse(h)),s.info("StateManager hydrated from localStorage.","[StateManager constructor]")}catch{s.warn("Failed to parse localStorage state. Using default values.","[StateManager constructor]")}this.#t=n.getInstance(i.canvas,this.#a),this.#e=r.getInstance(i.client),this.#t.subscribe(()=>this.#r()),this.#e.subscribe(()=>this.#r()),s.info("StateManager initialized successfully.","[StateManager constructor]")}catch(i){throw new Error(`Failed to initialize StateManager: ${i instanceof Error?i.message:String(i)}`)}}static getInstance(t,e,s){try{return a.#s||(a.#s=new a(t,e,s)),a.#s}catch(i){throw new Error(`Failed to get StateManager instance: ${i instanceof Error?i.message:String(i)}`)}}addTextElement(t){this.#t.addTextElement(t)}canRedoCanvas(){return this.#t.canRedo()}canUndoCanvas(){return this.#t.canUndo()}getCanvas(){return this.#t.get()}moveTextElement(t,e,s){this.#t.moveTextElement(t,e,s)}removeTextElement(t){this.#t.removeTextElement(t)}resetCanvas(){this.#t.reset()}setCanvas(t,e){this.#t.set(t,e)}subscribeToCanvas(t){return this.#t.subscribe(t)}redoCanvas(){this.#t.redo()}undoCanvas(){this.#t.undo()}getClient(){return this.#e.get()}setClient(t,e){this.#e.set(t,e)}subscribeToClient(t){return this.#e.subscribe(t)}getAll(){return{canvas:this.getCanvas(),client:this.getClient()}}#r(){try{window.localStorage.setItem("appState",JSON.stringify(this.getAll()))}catch{this.#n.warn("Failed to persist app state to localStorage","StateManger.#persistToStorage()")}}_(){this.#n,this.#i}}export{a as StateManager};
