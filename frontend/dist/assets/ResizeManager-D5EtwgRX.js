class t{static#e=null;#i=new Set;#t;#r;constructor(i){try{const{log:e}=i;e.info("Initializing ResizeManager..."),this.#t=i.errors,this.#r=e,this.initialize(),e.info("ResizeManager initialized successfully.")}catch(e){throw new Error(`Failed to initialize ResizeManager: ${e instanceof Error?e.message:String(e)}`)}}static getInstance(i){try{return t.#e||(t.#e=new t(i)),t.#e}catch(e){throw new Error(`Failed to get ResizeManager instance: ${e instanceof Error?e.message:String(e)}`)}}initialize(){this.#t.handleSync(()=>{this.#r.info("Registering Window Resize event listeners..."),document.addEventListener("DOMContentLoaded",this.runAll.bind(this))},"ResizeManager initialization failed.")}register(i){this.#i.add(i)}runAll(){this.#i.forEach(i=>{try{i()}catch(e){console.error("[ResizeManager] Plugin error:",e)}})}unregister(i){this.#i.delete(i)}}export{t as ResizeManager};
