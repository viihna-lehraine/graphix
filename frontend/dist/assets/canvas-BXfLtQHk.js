const g=()=>({drawVisualLayersToContext(a,n,s,i){n.slice().sort((e,o)=>e.zIndex-o.zIndex).forEach(e=>{if(!e.visible)return;a.save(),a.globalCompositeOperation="source-over",a.globalAlpha=e.opacity;const o=e.position?.x??0,r=e.position?.y??0,m=e.scale?.x??1,l=e.scale?.y??1,c=e.rotation?.currentAngle??0;switch(a.translate(o,r),a.rotate(c*Math.PI/180),a.scale(m,l),e.type){case"gif":{const t=e.gifFrames[e.currentFrame];t&&t.imageData instanceof ImageData?a.putImageData(t.imageData,0,0):i.warn(`GIF frame not found or invalid for layer ${e.id}`);break}case"image":{e.element&&e.element.complete&&e.element.naturalWidth>0&&a.drawImage(e.element,0,0);break}case"overlay":{a.globalCompositeOperation=s.canvas.mapBlendMode(e.blendMode),a.drawImage(e.element,0,0);break}case"sticker":{a.drawImage(e.element,0,0);break}case"video":{a.drawImage(e.element,0,0);break}}a.restore()}),a.globalAlpha=1,a.globalCompositeOperation="source-over"}});export{g as canvasUtilityFactory};
